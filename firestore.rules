
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Users can only read their own user document
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Authenticated users can read suppliers and reviews
    match /suppliers/{supplierId} {
        allow read: if isAuthenticated();
    }
    
    match /reviews/{reviewId} {
        allow read: if isAuthenticated();
        // Allow creating a review if authenticated
        allow create: if isAuthenticated();
    }

    // Orders can be read by either the vendor or the supplier
    match /orders/{orderId} {
        allow read, update: if isAuthenticated() && (resource.data.vendorId == request.auth.uid || resource.data.supplierId == request.auth.uid);
    }
    
    // Rules for bids and proposals
    match /bids/{bidId} {
      // Any authenticated user can read bids
      allow read: if isAuthenticated();
      
      // Only the vendor who created the bid can update it (e.g., award it)
      allow update: if isAuthenticated() && resource.data.vendorId == request.auth.uid;

      // Any authenticated user can create a bid
      allow create: if isAuthenticated();
      
      // Allow suppliers to create proposals on bids
      match /proposals/{proposalId} {
        allow create: if isAuthenticated() && request.auth.token.role == 'supplier';
        allow read: if isAuthenticated();
        allow update: if isAuthenticated(); // Allow vendor to update status (negotiate) or supplier to accept counter
      }
    }
  }
}
