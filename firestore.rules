rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow users to read their own data, and other users' public supplier profiles.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || resource.data.role == 'supplier';
      allow write: if request.auth.uid == userId;
    }

    // This rule allows the list query for suppliers on the supplier page.
    match /users/{userId} {
       allow list: if request.auth != null;
    }

    // Users can manage their own stock items
    match /stockItems/{stockItemId} {
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow read, update, delete: if request.auth.uid == resource.data.ownerId;
    }
    
    // Orders can be managed by either the vendor or the supplier involved
    match /orders/{orderId} {
        allow read, write: if request.auth.uid == resource.data.vendorId || request.auth.uid == resource.data.supplierId;
    }

    // Reviews can be read by anyone, but only created by the authenticated vendor
    match /reviews/{reviewId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.vendorId;
    }

    // Bids can be read by any authenticated user
    match /bids/{bidId} {
        allow read: if request.auth != null;
        // Bids can only be created by the vendor themselves
        allow create, update: if request.auth.uid == request.resource.data.vendorId;
    }
    
    // FIXED PROPOSAL RULES:
    match /bids/{bidId}/proposals/{proposalId} {
        allow read: if request.auth != null;
        
        // Enhanced proposal creation rules with proper validation:
        allow create: if 
            // 1. User must be authenticated
            request.auth != null &&
            
            // 2. The supplierId must match the authenticated user
            request.auth.uid == request.resource.data.supplierId &&
            
            // 3. The user document must exist
            exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
            
            // 4. The user must have 'supplier' role
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'supplier' &&
            
            // 5. The supplier cannot bid on their own requirements
            // (Check that the authenticated user is not the vendor who created the bid)
            request.auth.uid != get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId;
        
        // The vendor who owns the bid can update/accept proposals
        allow update: if 
            request.auth != null &&
            get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId == request.auth.uid;
    }

    match /diaryEntries/{entryId} {
        allow read, write: if request.auth.uid == resource.data.ownerId;
    }
  }
}
