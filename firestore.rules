rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read and update their own document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Anyone can read suppliers
    match /suppliers/{supplierId} {
      allow read: if true;
      // Allow write for admins or specific logic in the future
      allow write: if false; 
    }

    // Authenticated users can write reviews
    // Anyone can read reviews
    match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth.uid != null;
        // Allow update/delete only by the author
        allow update, delete: if request.auth.uid == resource.data.vendorId;
    }

    // Logged-in users can create stock items.
    // Users can only read, update, or delete their own stock items.
    match /stockItems/{stockItemId} {
        allow create: if request.auth.uid != null && request.resource.data.ownerId == request.auth.uid;
        allow read, update, delete: if request.auth.uid == resource.data.ownerId;
    }

    // Bids can be read by anyone authenticated.
    // Bids can be created by the vendor themselves.
    // Bids can only be updated (awarded/closed) by the vendor who created it.
    match /bids/{bidId} {
        allow read: if request.auth.uid != null;
        allow create: if request.auth.uid != null && request.resource.data.vendorId == request.auth.uid;
        allow update: if request.auth.uid == resource.data.vendorId;
        
        // Proposals sub-collection
        match /proposals/{proposalId} {
            allow read: if request.auth.uid != null;
            // A supplier can create a proposal
            allow create: if request.auth.uid != null && request.resource.data.supplierId == request.auth.uid;
            // The vendor can update all proposals (reject) and the supplier can update their own (negotiate)
            allow update: if (get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId == request.auth.uid) || (resource.data.supplierId == request.auth.uid);
        }
    }

    // Orders can be created by a vendor.
    // Orders can only be read or updated by the vendor or the supplier involved.
    match /orders/{orderId} {
        allow create: if request.auth.uid != null && request.resource.data.vendorId == request.auth.uid;
        allow read, update: if request.auth.uid == resource.data.vendorId || request.auth.uid == resource.data.supplierId;
    }
  }
}
