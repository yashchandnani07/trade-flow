
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isRole(role) {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isAuth() && request.auth.uid == userId;
    }

    match /reviews/{reviewId} {
      allow read: if isAuth();
      allow create: if isAuth() && request.resource.data.vendorId == request.auth.uid;
    }

    match /orders/{orderId} {
        allow read, write: if isAuth() && (
            resource.data.vendorId == request.auth.uid || 
            resource.data.supplierId == request.auth.uid
        );
    }
    
    match /stockItems/{itemId} {
        allow read, write: if isAuth() && request.auth.uid == resource.data.ownerId;
        allow create: if isAuth() && request.resource.data.ownerId == request.auth.uid;
    }

    match /diaryEntries/{entryId} {
        allow read, write: if isAuth() && request.auth.uid == resource.data.ownerId;
        allow create: if isAuth() && request.resource.data.ownerId == request.auth.uid;
    }
    
    match /bids/{bidId} {
        allow read: if isAuth();
        allow create: if isRole('vendor') && request.resource.data.vendorId == request.auth.uid;
        allow update: if isAuth() && resource.data.vendorId == request.auth.uid;

        match /proposals/{proposalId} {
            // A supplier can create a proposal if:
            // 1. They are authenticated and have the 'supplier' role.
            // 2. The proposal's supplierId matches their own UID.
            // 3. They are not the vendor who created the bid.
            allow create: if isRole('supplier')
                && request.resource.data.supplierId == request.auth.uid
                && get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId != request.auth.uid;

            // A user can read a proposal if:
            // 1. They are the vendor who owns the bid.
            // 2. They are the supplier who created the proposal.
            allow read: if isAuth() && (
                get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId == request.auth.uid ||
                resource.data.supplierId == request.auth.uid
            );

            // A user can update a proposal if:
            // 1. They are the vendor who owns the bid (e.g., to accept/reject).
            // 2. They are the supplier who owns the proposal (e.g., for negotiation).
            allow update: if isAuth() && (
                get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId == request.auth.uid ||
                resource.data.supplierId == request.auth.uid
            );
        }
    }
  }
}
