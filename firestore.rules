
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // A user can read their own document.
    // Any authenticated user can read another user's document if that user is a 'supplier'.
    match /users/{userId} {
      allow write: if request.auth.uid == userId;
      allow read: if request.auth.uid == userId || (get(/databases/$(database)/documents/users/$(userId)).data.role == 'supplier' && request.auth != null);
    }

    // CORRECTED RULE for listing suppliers.
    // This allows any authenticated user to perform the query on the 'users' collection
    // to find suppliers. The actual filtering is done in the app's code,
    // and the `read` rule above will protect individual user documents that aren't suppliers.
    match /users/{userId} {
       allow list: if request.auth != null;
    }

    // Users can manage their own stock items
    match /stockItems/{stockItemId} {
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow read, update, delete: if request.auth.uid == resource.data.ownerId;
    }
    
    // Orders can be managed by either the vendor or the supplier involved
    match /orders/{orderId} {
        allow read, write: if request.auth.uid == resource.data.vendorId || request.auth.uid == resource.data.supplierId;
    }

    // Reviews can be read by any authenticated user.
    // They can only be created by the vendor specified in the review.
    match /reviews/{reviewId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.vendorId;
    }

    // Bids can be read by any authenticated user.
    // They can only be created or updated by the vendor who posted them.
    match /bids/{bidId} {
        allow read: if request.auth != null;
        allow create, update: if request.auth.uid == request.resource.data.vendorId;
    }
    
    // Proposals can be read by any authenticated user.
    // They can only be created by suppliers.
    // They can only be updated by the vendor who owns the bid.
    match /bids/{bidId}/proposals/{proposalId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.supplierId;
        allow update: if get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId == request.auth.uid;
    }
  }
}
