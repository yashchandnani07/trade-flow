
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow users to read their own data, and other users' public supplier profiles.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || resource.data.role == 'supplier';
      allow write: if request.auth.uid == userId;
    }

    // This rule allows the list query for suppliers on the supplier page.
    match /users/{userId} {
       allow list: if request.auth != null;
    }

    // Users can manage their own stock items
    match /stockItems/{stockItemId} {
      allow create: if request.auth.uid == request.resource.data.ownerId;
      allow read, update, delete: if request.auth.uid == resource.data.ownerId;
    }
    
    // Orders can be managed by either the vendor or the supplier involved
    match /orders/{orderId} {
        allow read, write: if request.auth.uid == resource.data.vendorId || request.auth.uid == resource.data.supplierId;
    }

    // Reviews can be read by anyone, but only created by the authenticated vendor
    match /reviews/{reviewId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.vendorId;
    }

    // Bids (Requirements)
    match /bids/{bidId} {
        // Any authenticated user can read bids to see what's on the marketplace.
        allow read: if request.auth != null;
        
        // Only authenticated vendors can create or update their own bids.
        allow create, update: if request.auth.uid == request.resource.data.vendorId;

        // Only the vendor who created the bid can delete it.
        allow delete: if request.auth.uid == resource.data.vendorId;
    }
    
    // Proposals on Bids
    match /bids/{bidId}/proposals/{proposalId} {
        // A user can read a proposal if they are the vendor who owns the bid,
        // or if they are the supplier who created this specific proposal.
        allow read: if request.auth != null && (
          get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId == request.auth.uid || 
          resource.data.supplierId == request.auth.uid
        );
        
        // Rules for creating a proposal (i.e., placing a bid)
        allow create: if 
            // 1. User must be authenticated.
            request.auth != null &&
            // 2. The supplierId in the new proposal must match the user's authenticated UID.
            request.auth.uid == request.resource.data.supplierId &&
            // 3. The user must have the 'supplier' role.
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'supplier' &&
            // 4. A supplier cannot bid on their own requirement.
            request.auth.uid != get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId;
        
        // The vendor who owns the bid can update proposals (e.g., to accept them).
        allow update: if 
            request.auth != null &&
            get(/databases/$(database)/documents/bids/$(bidId)).data.vendorId == request.auth.uid;
    }
  }
}
